{"version":3,"sources":["chapter6/Summary.js","chapter6/AddColorForm.js","chapter6/AddColorForm2.js","chapter6/Star.js","chapter6/StarRating.js","chapter6/Color.js","chapter6/ColorList.js","chapter7/Member.js","chapter6/Chapter6.js","chapter7/MemberList.js","chapter7/HiddenMessage.js","chapter7/Clock.js","chapter7/Children.js","chapter7/HiddenMessages.js","chapter7/CountryList.js","chapter7/Chapter7.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Summary","this","props","ingredients","steps","title","className","length","Component","defaultProps","AddColorForm2","_title","_color","onNewColor","f","onSubmit","e","preventDefault","value","focus","ref","input","type","placeholder","required","Star","selected","onClick","StarRating","starsSelected","totalStars","onRate","Array","map","n","i","key","Color","color","rating","onRemove","style","backgroundColor","ColorList","colors","id","Member","email","picture","name","location","src","thumbnail","alt","first","last","href","city","state","getFakeMembers","count","Promise","resolve","rejects","api","request","XMLHttpRequest","open","onload","status","JSON","parse","response","results","Error","statusText","onerror","err","send","Letter","require","XRegExp","HiddenMessage","hidden","hide","nextProps","setState","children","onMouseEnter","show","onMouseLeave","replace","findChild","child","Children","toArray","filter","c","WhenTruthy","only","WhenFalsy","render","ifTruthy","age","document","getElementById","CountryList","countryNames","loading","fetch","then","json","country","x","Chapter7","App","Boolean","window","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.868e6fc6.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// ES6 클래스\r\nclass Summary extends Component{\r\n  // 정적 프로퍼티 사용\r\n  static propTypes = {\r\n    ingredients: PropTypes.array.isRequired,\r\n    steps: PropTypes.array.isRequired,\r\n    title: (props, propName) =>\r\n      (typeof props[propName] !== 'string') ?\r\n        new Error(\"제목(title)은 문자열이여야 합니다.\") :\r\n        (props[propName].length > 20) ?\r\n          new Error(\"제목은 20자 이내여야 합니다.\") :\r\n          null\r\n  }\r\n\r\n  static defaultProps = {\r\n    ingredients: 0,\r\n    steps: 0,\r\n    title: \"[무제]\"\r\n  }\r\n\r\n  render() {\r\n    const {ingredients, steps, title} = this.props\r\n    return(\r\n      <div className=\"summary\">\r\n        <h1>{title}</h1>\r\n        <p>\r\n          <span>재료 {ingredients.length} 종류 | </span>\r\n          <span>총 {steps.length} 단계</span>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 함수 외부 프로퍼티 사용\r\n// Summary.propTypes = {\r\n//   ingredients: PropTypes.array.isRequired,\r\n//   steps: PropTypes.array.isRequired,\r\n//   title: (props, propName) =>\r\n//     (typeof props[propName] !== 'string') ?\r\n//       new Error(\"제목(title)은 문자열이여야 합니다.\") :\r\n//       (props[propName].length > 20) ?\r\n//         new Error(\"제목은 20자 이내여야 합니다.\") :\r\n//         null\r\n// };\r\n\r\n// Summary.defaultProps = {\r\n//   ingredients: 0,\r\n//   steps: 0,\r\n//   title: \"[무제]\"\r\n// }\r\n\r\nexport default Summary","import React, { Component } from 'react'\r\n\r\nclass AddColorForm extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.submit = this.submit.bind(this)\r\n  }\r\n\r\n  submit(e) {\r\n    e.preventDefault()\r\n    const { _title, _color } = this.refs\r\n\r\n    alert(`새로운 색: ${_title.value} ${_color.value}`)\r\n    _title.value = ''\r\n    _color.value = '#000000'\r\n    _title.focus()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submit}>\r\n        <input ref=\"_title\" type=\"text\" placeholder=\"색 이름...\" required />\r\n        <input ref=\"_color\" type=\"color\" required />\r\n        <button>추가</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddColorForm","import React from 'react'\r\n\r\nconst AddColorForm2 = ({onNewColor=f=>f}) => {\r\n  let _title, _color;\r\n  const submit = e => {\r\n    e.preventDefault()\r\n    onNewColor(_title.value, _color.value)\r\n    _title.value = ''\r\n    _color.value = '#000000'\r\n    _title.focus()\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submit}>\r\n      <input ref={input => _title = input} type=\"text\" placeholder=\"색 이름...\" required />\r\n      <input ref={input => _color = input} type=\"color\" required />\r\n      <button>추가</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddColorForm2","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Star extends Component {\r\n  static propTypes = {\r\n    selected: PropTypes.bool,\r\n    onClick: PropTypes.func\r\n  }\r\n\r\n  static defaultProps = {\r\n    selected: false,\r\n    onClick: f => f\r\n  }\r\n\r\n  render() {\r\n    const {selected, onClick} = this.props\r\n    return (\r\n      <div className= {(selected) ? \"star selected\" : \"star\"} onClick = {onClick}>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Star","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Star from './Star'\r\n\r\n// class StarRating extends Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       starsSelected: props.starsSelected || 0\r\n//     }\r\n//     this.change = this.change.bind(this)\r\n//   }\r\n  \r\n//   change(starsSelected) {\r\n//     this.setState({starsSelected})\r\n//   }\r\n\r\n//   componentWillMount() {\r\n//     const { starsSelected } = this.props\r\n//     if(starsSelected) {\r\n//       this.setState({starsSelected})\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     const {totalStars} = this.props\r\n//     const {starsSelected} = this.state \r\n\r\n//     return (\r\n//       <div className=\"star-rating\">\r\n//         {\r\n//           [...Array(totalStars)].map((n, i) =>\r\n//             <Star key={i} selected={i<starsSelected} onClick={() => this.change(i+1)} />\r\n//           )\r\n//         }\r\n//         <br />\r\n//         <p>\r\n//           별점: {starsSelected} / {totalStars}\r\n//         </p>\r\n//       </div>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// StarRating.propTypes = {\r\n//   totalStars: PropTypes.number\r\n// }\r\n\r\n// StarRating.defaultProps = {\r\n//   totalStars: 5\r\n// }\r\n\r\nconst StarRating = ({starsSelected=0, totalStars=5, onRate=f=>f}) =>\r\n  <div className=\"star-rating\">\r\n    {[...Array(totalStars)].map((n, i) =>\r\n      <Star key={i}\r\n            selected={i<starsSelected}\r\n            onClick={() => onRate(i+1)} />\r\n    )}\r\n    <br />\r\n    <p>별점: {starsSelected} / {totalStars}</p>\r\n  </div>\r\n\r\nexport default StarRating","import React from 'react'\r\nimport StarRating from './StarRating'\r\n\r\nconst Color =({ title, color, rating=0, onRemove=f=>f, onRate=f=>f }) =>\r\n  <section className=\"color\">\r\n    <h1>{title}</h1>\r\n    <button onClick={onRemove}>X</button>\r\n    <div className=\"color\" style={{ backgroundColor: color }}></div>\r\n    <div>\r\n      <StarRating starsSelected={rating} onRate={onRate} />\r\n    </div>\r\n  </section>\r\n\r\nexport default Color","import React from 'react'\r\nimport Color from './Color'\r\n\r\nconst ColorList = ({ colors=[], onRate=f=>f, onRemove=f=>f }) =>\r\n  <div>\r\n    <div className=\"color-list\">\r\n      {\r\n        (colors.length === 0) ?\r\n        <p>색이 없습니다. 색을 추가해주세요</p> :\r\n        colors.map(color =>\r\n          <Color key={color.id} \r\n            {...color} \r\n            onRate={(rating) => onRate(color.id, rating)}\r\n            onRemove={() => onRemove(color.id)} />\r\n        )\r\n      }\r\n    </div>\r\n  </div>\r\n\r\nexport default ColorList","import React from 'react'\r\n\r\nconst Member = ({ email, picture, name, location }) =>\r\n  <div className=\"member\">\r\n    <img src={picture.thumbnail} alt=\"\" />\r\n    <h1>{name.first} {name.last}</h1>\r\n    <p><a href={\"mailto:\" + email}>{email}</a></p>\r\n    <p>{location.city}, {location.state}</p>\r\n  </div>\r\n\r\nexport default Member","import React, { Component } from 'react'\r\nimport Summary from './Summary'\r\nimport Summary2 from './Summary2'\r\nimport AddColorForm from './AddColorForm'\r\nimport AddColorForm2 from './AddColorForm2'\r\nimport Star from './StarRating'\r\nimport StarRating from './StarRating'\r\nimport ColorList from './ColorList'\r\nimport { v4 } from 'uuid'\r\n\r\n\r\nimport './Chapter6.css';\r\n\r\nclass Chapter6 extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      colors: []\r\n    }\r\n    this.addColor = this.addColor.bind(this)\r\n    this.rateColor = this.rateColor.bind(this)\r\n    this.removeColor = this.removeColor.bind(this)\r\n  }\r\n\r\n  addColor(title, color) {\r\n    const colors = [\r\n      ...this.state.colors,\r\n      {\r\n        id: v4(),\r\n        title,\r\n        color,\r\n        rating: 0\r\n      }\r\n    ]\r\n    this.setState({ colors })\r\n  }\r\n\r\n  rateColor(id, rating) {\r\n    const colors = this.state.colors.map(color =>\r\n      (color.id !== id) ?\r\n        color:\r\n        {\r\n          ...color,\r\n          rating\r\n        }\r\n    )\r\n    this.setState({ colors })\r\n  }\r\n\r\n  removeColor(id) {\r\n    const colors = this.state.colors.filter(\r\n      color => color.id !== id\r\n    )\r\n      this.setState({ colors })\r\n  }\r\n\r\n  render() {\r\n    const { addColor, rateColor, removeColor } = this\r\n    const { colors } = this.state\r\n    return (\r\n      //<Summary />\r\n      // <Summary title=\"tsefsefsefesfsefdsfesfskfjdlf\" \r\n      //   ingredients=\"땅콩버터, 젤리, 식빵\"\r\n      //   steps=\"만들어\" />\r\n  \r\n      // <AddColorForm />\r\n      // <AddColorForm2 onNewColor={(title, color) => {\r\n      //   console.log(`${title} // ${color}`)\r\n      // }}/>\r\n\r\n      // <StarRating totalStars={7} starsSelected={3}/>\r\n      <div>\r\n        <AddColorForm2 onNewColor={(addColor)} />\r\n        <ColorList colors = {colors} \r\n          onRate={rateColor}\r\n          onRemove={removeColor} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chapter6","import React, {Component} from 'react'\r\nimport Member from './Member'\r\n\r\nclass MemberList extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      members: [],\r\n      loading: false,\r\n      error: null\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ loading: true })\r\n    getFakeMembers(this.props.count).then(\r\n      members => {\r\n        this.setState({members, loading: false})\r\n      }, \r\n      error => {\r\n        this.setState({error, loading: false})\r\n      }\r\n    )\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log(\"갱신 생애주기\")\r\n  }\r\n\r\n  render() {\r\n    const { members, loading, error } = this.state\r\n    return(\r\n      <div className=\"member-list\">\r\n        {\r\n          (loading) ?\r\n          <span>멤버 로딩 중</span> :\r\n          (members.length) ?\r\n            members.map((user, i) =>\r\n              <Member key={i} {...user} />\r\n          ) :\r\n          <span>0 멤버 로딩됨...</span>\r\n        }\r\n        {/*         \r\n        {\r\n          (error) ? <div> 멤버 로딩 오류: {error} </div> : \"\" \r\n        } \r\n        */}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst getFakeMembers = count => new Promise((resolve, rejects) => {\r\n  const api = `https://api.randomuser.me/?nat=US&results=${count}`\r\n  const request = new XMLHttpRequest()\r\n  request.open('GET', api)\r\n  request.onload = () => (request.status === 200) ?\r\n    resolve(JSON.parse(request.response).results) :\r\n    rejects(Error(request.statusText))\r\n  request.onerror = err => rejects(err)\r\n  request.send()\r\n})\r\n\r\nexport default MemberList","import React, { Component } from 'react'\r\n\r\nconst XRegExp = require('xregexp')\r\n\r\nconst Letter = XRegExp('\\\\pL', 'g') // 유니코드 문자 클래스(\\pL), global옵션\r\n\r\nclass HiddenMessage extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      hidden: typeof props.hide === \"boolean\" ? props.hide : true\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({hidden: nextProps.hide})\r\n  }\r\n\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    const { hidden } = this.state\r\n\r\n    return (\r\n      <p onMouseEnter={this.show}\r\n         onMouseLeave={this.hide}\r\n      >\r\n        {\r\n          (hidden) ?\r\n          children.replace(Letter, \"x\") :\r\n          children \r\n        }\r\n      </p>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HiddenMessage","import React, {Component} from 'react'\r\nimport {getClockTime} from './lib'\r\n\r\nclass Clock extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = getClockTime()\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"시계 시작중\")\r\n    this.ticking = setInterval(() => \r\n      this.setState(getClockTime())\r\n      , 1000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this, this.ticking)\r\n    console.log(\"시계 중단 중\")\r\n  }\r\n\r\n  render() {\r\n     const { hours, minutes, seconds, timeOfDay }  = this.state\r\n     return(\r\n       <div className=\"clock\">\r\n         <span>{hours}</span>\r\n         <span>:</span>\r\n         <span>{minutes}</span>\r\n         <span>:</span>\r\n         <span>{seconds}</span>\r\n         <span>{timeOfDay}</span>\r\n         <button onClick={this.props.onClose}>x</button>\r\n       </div>\r\n     )\r\n  }\r\n}\r\n\r\nexport default Clock","import React, {Children, PropTypes} from 'react'\r\nimport {render} from 'react-dom'\r\n\r\nconst findChild = (children, child) =>\r\n  Children.toArray(children).filter(c => c.type === child)[0]\r\n\r\nconst WhenTruthy = ({children}) =>\r\n  Children.only(children)\r\n\r\nconst WhenFalsy = ({children}) =>\r\n  Children.only(children)\r\n\r\nconst Display = ({ ifTruthy=true, children }) =>\r\n  (ifTruthy) ?\r\n    findChild(children, WhenTruthy) :\r\n    findChild(children, WhenFalsy)\r\n\r\nconst age = 19\r\n\r\nrender(\r\n  <Display ifTruthy={age >= 21}>\r\n    <WhenTruthy>\r\n      <h1>들어오세요</h1>\r\n    </WhenTruthy>\r\n    <WhenFalsy>\r\n    <h1>애들은 가!</h1>\r\n    </WhenFalsy>\r\n  </Display>,\r\n  document.getElementById('react-container')\r\n)\r\n\r\nexport default Children","import React, { Component } from 'react'\r\nimport HiddenMessage from './HiddenMessage'\r\n\r\nclass HiddenMessages extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      messages: [\r\n        \"The crow crows after midnight\",\r\n        \"Jericho Jericho Go\",\r\n        \"엄마가 섬그늘에 굴 따러 가면\"\r\n      ],\r\n      showing: -1\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.interval = setInterval(() => {\r\n      this.setState(prevState => {\r\n        let { showing, messages } = prevState\r\n        showing = (++showing >= messages.length) ?\r\n          0 : showing\r\n        return {showing}\r\n      })\r\n    }, 1000)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval)\r\n  }\r\n\r\n  render() {\r\n    const { messages, showing } = this.state\r\n    return (\r\n      <div className=\"hidden-messages\">\r\n        {messages.map((message, i) =>\r\n          <HiddenMessage key={i} hide={(i!==showing)}>\r\n            {message}\r\n          </HiddenMessage>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HiddenMessages","import React, { Component } from 'react'\r\nimport fetch from 'isomorphic-fetch'\r\n\r\nclass CountryList extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      countryNames: [],\r\n      loading: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({loading: false})\r\n    fetch('https://restcountries.eu/rest/v1/all')\r\n      .then(response => response.json())\r\n      .then(json => json.map(country => country.name))\r\n      .then(countryNames =>\r\n        this.setState({countryNames, loading: false})\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { countryNames, loading } = this.state\r\n    return(loading) ?\r\n      <div>나라 이름 로딩 중...</div> :\r\n      (!countryNames.length) ?\r\n      <div>나라 이름이 없습니다</div> :\r\n        <ul>\r\n          {countryNames.map((x, i) =>\r\n            <li key={i}>{x}</li>\r\n          )}\r\n        </ul>\r\n  }\r\n}\r\n\r\nexport default CountryList","import React, { Component } from 'react'\r\nimport { unmountComponentAtNode } from 'react-dom'\r\nimport MemberList from './MemberList'\r\nimport Clock from './Clock'\r\nimport HiddenMessages from './HiddenMessages'\r\nimport Children from './Children'\r\nimport CountryList from './CountryList'\r\nimport Timeline from './Timeline'\r\n\r\nimport './Chapter7.css';\r\n\r\nconst historicDatesForSkiing = [{\r\n  year: 1879,\r\n  event: \"스키 생산 시작\"\r\n}, {\r\n  year: 1882,\r\n  event: \"미국 스키 클럽 창설\"\r\n}, {\r\n  year: 1924,\r\n  event: \"제1회 겨울 올림픽 개최\"\r\n}, {\r\n  year: 1926,\r\n  event: \"첫 번째 미국 스키샵이 문을 염\"\r\n}, {\r\n  year: 1932,\r\n  event: \"북아메리카 최초로 견인 로프(rope tow) 작동 시작\"\r\n}, {\r\n  year: 1949,\r\n  event: \"스쿼벨리, 매드 리버 글렌 개장\"\r\n}, {\r\n  year: 1958,\r\n  event: \"첫 번째 곤돌라 작동 시작\"\r\n}, {\r\n  year: 1964,\r\n  event: \"플라스틱 버클 부츠 출시\"\r\n}]\r\n\r\nclass Chapter7 extends Component {\r\n  render() {\r\n    return (\r\n      //<HiddenMessages />\r\n      //<Children />\r\n      <CountryList />\r\n      // <Timeline name=\"스키의 역사\" data={historicDatesForSkiing} />\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chapter7","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Chapter6 from './chapter6/Chapter6'\nimport Chapter7 from './chapter7/Chapter7'\n\n\nclass Test extends Component {\n  render() {\n    return (\n      <h1>야호</h1>\n    )\n  }\n}\n\nclass App extends Component {\n  render() {\n    return(\n      //<Chapter6 />\n      <Chapter7 />\n    )\n  } \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}